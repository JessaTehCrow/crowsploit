import_code("../kernel/toolkernel")
import_code("../libs/argparse")

env_tool = Tool.New("env", "1.0.1")
env_tool.short_description = "Set and see environment variables"
env_tool.long_description  = "Set and see environment variables"

value_color = function(v)
    if v isa number then
        if v%1 == 0 then
            return "int"
        else
            return "float"
        end if
    else if v isa string then
        if is_valid_ip(v) then
            return "ip"
        else
            return "string"
        end if
    end if
end function

// main
env_main_args = []
env_main_func = function(a)
    tab_data = []
    for item in a.kernel.env
        tab_data.push([item.key, a.kernel.color("$"+value_color(item.value)+";"+item.value)])
    end for

    titles = ["Env Key", "Value"]

    res = tabulate_data(tab_data, titles, [a.kernel.color("$P;"), a.kernel.color("$S;")])
    if is_error(res) then return res.stack("system.env")

    print(res.string)
end function

env_main_cmd = env_tool.main_command(env_main_args, @env_main_func)
env_main_cmd.short_description = "Show environment variables"
env_main_cmd.long_description = "$P;Usage:
$P;system env"

// set

set_args = [
    Arg.New("key", "string").Info("Name of environment variable"),
    Arg.New("value", "string").Info("Value for environment variable"),
    Kwarg.New("no-parse","bool").Default(false).Alias("n").Info("Don't parse into a datatype")
]

set_func = function(a)
    if a["no-parse"] then
        a.kernel.env[a.key] = a.value
    else
        a.kernel.env[a.key] = string_value_type(a.value)[0]
    end if
    print("$S;Set $T2;" + a.key + "$S; to $T2;" + a.value)
end function

set_cmd = env_tool.command("set", set_args, @set_func)
set_cmd.short_description = "Set your own environment variables"
set_cmd.long_description  = "$P;Usage:
$P;env set $string;example 'example value'
$P;env set $string;passwd 'rootpassword123'"

// del

del_args = [
    Arg.New("key", "string").Info("Key to delete from your environment variables")
]

del_func = function(a)
    if not a.kernel.env.hasIndex(a.key) then return KernelError.New("env.del", "Key '"+a.key+"' not found in environment variables.")
    remove(a.kernel.env, a.key)
    print("$S;Removed key $T2;'"+a.key+"'$S; from your environment variables")
end function

del_cmd = env_tool.command("del", del_args, @del_func)
del_cmd.short_description = "Delete environment variables"
del_cmd.long_description = "$P;Usage:
$P;env del $string;RAND_IP
$P;env del $string;example"

// init

env_tool.init()