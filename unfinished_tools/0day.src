import_code("../kernel/toolkernel")

// Define new tool
zday = Tool.New("test", "1.0.0")

patch_args = [
    Arg.New("library", "string").Info("Library to patch"),
]

patch_func = function(a)
    if a.kernel.session.meta == null then return ObjectError.New("0day.patch", "metaxploit")

    lib = include_lib(a.library)
    if lib == null then return OsError.New("0day.patch", "Invalid library")

    username = user_input(a.kernel.color("$S;Neurobox username: $T2;"))
    username = user_input(a.kernel.color("$S;Neurobox password: $T2;"))

    result = lib.debug_tools()
    if result == null then return Error.New("0day.patch", "Failed to get debug library")
    if result isa string then return Error.New("0day.patch", result)
    
end function

patch_cmd = zday.command("patch", patch_args, @patch_func)
patch_cmd.short_description = "Small example tool"
patch_cmd.long_description = "Small example tool. but long description"

zday.init()